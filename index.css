/*
Полезные ссылки:
1. Уроки по CSS для НАЧИНАЮЩИХ: https://www.youtube.com/playlist?list=PL6NCtzCz-4pQZ-uueXnuIcQMs085CAhty
2. Узнать цвет по скриншоту: https://sanstv.ru/color#ffffff
3. Узнать цвет есть программка instant eyedropper: http://instant-eyedropper.com/
4. Узнать какие браузеры поддерживают CSS свойств: https://caniuse.com/
5. CSS справочник атрибут: https://webref.ru/css
6. Имена цветов: https://www.w3.org/wiki/CSS/Properties/color/keywords
7. Конвертер цвета: https://color2.ru/rgb-hex
7. Конвертер цвета: https://htmlbook.ru/css/border-style
8. Курсор: https://webref.ru/css/cursor
*/


/*
Как строиться css
СЕЛЕКТОР{
СВОЙСТВО:ЗНАЧЕНИЕ;
СВОЙСТВО:ЗНАЧЕНИЕ;
СВОЙСТВО:ЗНАЧЕНИЕ;
}
*/
/*
Псевдоклассы
СЕЛЕКТОР: ПСЕВДОКЛАСС{
СВОЙСТВО:ЗНАЧЕНИЕ;
СВОЙСТВО:ЗНАЧЕНИЕ;
СВОЙСТВО:ЗНАЧЕНИЕ;
}
*/
/*
top-верх,
bottom-низ,
left-левый,
right-правый
*/

/*

display:flex ->размечает контейнер для его элементов

justify-content->Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера.

justify-content: flex-start | flex-end | center | space-between |
                 space-around | space-evenly

flex-start->Флексы прижаты к началу строки.
flex-end -> Флексы прижаты к концу строки.
center -> Флексы выравниваются по центру строки.
space-between -> Флексы равномерно распределяются по всей строке. Первый и последний элемент прижимаются к соответствующим краям контейнера.
space-around -> Флексы равномерно распределяются по всей строке. Пустое пространство перед первым и после последнего элементов равно половине пространства между двумя соседними элементами.
space-evenly -> Флексы распределяются так, что расстояние между любыми двумя соседними элементами, а также перед первым и после последнего, было одинаковым.

Свойство align-items выравнивает флекс-элементы внутри контейнера вдоль второстепенной оси направлении.

align-items: flex-start | flex-end | center | baseline | stretch

stretch->Флексы растягиваются таким образом, чтобы занять всё доступное пространство контейнера.
baseline->Флексы выравниваются по их базовой линии.

свойства которые применяются на родителя: display:flex,justify-content,align-items,align-content
свойства которые применяются на детей: align-self, order,flex-basis, flex-shrink,
*/

html {
    /*height: 100%;*/
}

body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    font-size: 32px;
}

.main {
    background-color: #bbb;
    width: 100%;
    height: 700px;
}

.main div {
    margin: 5px;
    padding-top: 5px;
    /*flex-basis: 100px;*/
    /* Свойство flex-basis указывает на ширину. Оно приоритетнее чем width. flex-basis будет работать как ширина если указана flax-direction:row.
     Если указана flax-direction:column flex-basis будет работать как высота и он будет иметь больше приоритет чем height.   */
    /*width:400px;*/
    color: #fff;
    text-align: center;
    border-radius: 5px;
    /*flex-shrink: 0;*/
}

.child_1 {
    background-color: #660000;
    order: 1;
}

.child_2 {
    background-color: #990066;
    order: 2;
}

.child_3 {
    background-color: #333366;
    order: 3;
}

.child_4 {
    background-color: #009999;
    order: 4;
}

.child_5 {
    background-color: #009933;
    order: 5;
}

.main {
    display: flex;
    /*flex-direction: row-reverse;*/
    /*flex-direction: column-reverse;*/
    /*flex-direction: column;*/
    justify-content: flex-start;
    /*align-items: center;*/
    flex-wrap: nowrap;
    /*    flex-wrap-> Указывает, следует ли флексам располагаться в одну строку или можно занять несколько строк.*/

    /*align-content: flex-start;*/
    /*    Свойство align-content используется для выравнивания элементов внутри флекс- или грид-контейнера по поперечной оси.*/
}

.child_2 {
    /*align-self: flex-end;*/
    /*    Свойство align-self выравнивает флекс-элементы текущей строки, переписывая значение align-items.*/
    flex-shrink: 5; /* сжимает элемент 1, не сжимать элемент 0*/
    /*    Устанавливает коэффициент сжатия флексов в контейнере и задаёт, насколько элемент будет уменьшаться по отношению
    к другим флексам, чтобы разместить все элементы в одну строку.

    Если нужно сжимать какойто элемент сильней чем остальные можно поставить flex-shrink: 5; или любое другое число
    */
}

.child_3 {
    /*flex-grow: 1;*/
    /*flex-grow -> определяет нужно ли расширить указанный блок за счет не используемого пространства в контейнере*/
    /* Свойство flex-grow определяет то, на сколько отдельный flex-блок может быть больше соседних элементов, если это необходимо.*/
    /*align-self: flex-start;*/
    flex: 500px 0 1;
/*    ширина сжимать расширять */
/*    Свойство flex сокращение для flex-basis, flex-shrink и flex-grow.*/
}







































































































